<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>ehrokr</display-name>
	<description>frame</description>
	<!-- 设置Spring容器加载配置文件路径,主容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:spring/applicationContext*.xml
		</param-value>
	</context-param>

	<!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 实例化Spring容器 -->
	<!-- 启动Web容器时，自动装配ApplicationContext的配置信息,加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 监听HTTP请求事件，web服务器接收的每一次请求都会通知该监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- 解决工程编码过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<!-- 无论客户端请求是否包含了编码，都用过滤器里的编码来解析请求 -->
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
	<!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->
	<!-- <filter> <filter-name>shiroFilter</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		<init-param> 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 
		<param-name>targetFilterLifecycle</param-name> <param-value>true</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>shiroFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<!-- Spring Security -->
	<!-- <filter> <filter-name>springSecurityFilterChain</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		</filter> <filter-mapping> <filter-name>springSecurityFilterChain</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<!-- sessionFilter -->
	<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>com.netease.okr.filter.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- securityFilter -->
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>com.netease.okr.filter.SecurityFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- logger filter -->
	<filter>
		<filter-name>loggerFilter</filter-name>
		<filter-class>com.netease.okr.filter.LoggerFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loggerFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- log4j配置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>ehrokr</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.netease.okr.listener.InitListener</listener-class>
	</listener>

	<!-- 配置Spring MVC 控制器 -->
	<servlet>
		<servlet-name>ehrokr</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/springMVC.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>ehrokr</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<!-- Druid监控 -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.eot,*.svg,*.ttf,*.woff,*.woff2,*.otf,/druid/*</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<session-config>
		<!-- 分钟 -->
		<session-timeout>120</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>/openid.do</welcome-file>
	</welcome-file-list>


	<!-- <error-page> <exception-type>java.lang.Throwable</exception-type> <location>/public/common/500.html</location> 
		</error-page> -->
	<error-page>
		<error-code>500</error-code>
		<location>/public/50x.html</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/public/40x.html</location>
	</error-page>
	
	
</web-app>