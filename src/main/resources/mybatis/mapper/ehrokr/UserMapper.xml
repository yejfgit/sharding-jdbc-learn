<?xml version = "1.0" encoding = "UTF-8"  ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.netease.okr.mapper.okr.UserMapper">
	
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
	
	<resultMap id="UserResultMap" type="com.netease.okr.model.entity.security.User" >
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="u_no" property="uNo"  />
		<result column="corp_mail" property="corpMail"  />
		<result column="emp_type" property="empType"  />
		<result column="state" property="state"  />
		<result column="is_valid" property="isValid"  />
		<result column="dept_l1_id" property="deptL1Id"  />
		<result column="dept_l2_id" property="deptL2Id"  />
		<result column="dept_l3_id" property="deptL3Id"  />
		<result column="station_name" property="stationName"  />
		<result column="photo_url" property="photoUrl"  />
		<result column="nos_key" property="nosKey"  />
		<result column="modify_time" property="modifyTime"  />
		<result column="create_time" property="createTime"  />
		<result column="deptL1Name" property="deptL1Name"  />
		<result column="deptL2Name" property="deptL2Name"  />
		<result column="deptL3Name" property="deptL3Name"  />
		
		<collection column="id" property="userRoles" ofType="com.netease.okr.model.entity.security.Role" select="getRolesByUserId" />
	</resultMap>
	
	<sql id="selectedUserColumns">
		u.id,
		u.name,
		u.u_no,
		u.emp_type,
		u.state,
		u.corp_mail,
		u.is_valid,
		u.dept_l1_id,
		u.dept_l2_id,
		u.dept_l3_id,
		u.station_name,
		u.photo_url,
		u.nos_key,
		u.modify_time,
		u.create_time,
		d1.name deptL1Name,
		d2.name deptL2Name,
		d3.name deptL3Name

	</sql>
	
	<sql id="userWhere">
		<where>
			u.state in (0,1)
			<if test="deptId!=null and deptId!=''"> (u.dept_l1_id = #{deptId} or u.dept_l2_id = #{deptId} or u.dept_l3_id = #{deptId} ) </if>
			<if test="desp!=null and desp!=''">and (u.name like "%"#{desp}"%" or u.u_no like "%"#{desp}"%") </if>
		</where>
	</sql>
	
	
	<sql id="joinCon">
		left outer join tb_dept d1 on d1.id=u.dept_l1_id
		left outer join tb_dept d2 on d2.id=u.dept_l2_id
		left outer join tb_dept d3 on d3.id=u.dept_l3_id
	</sql>
	

	<select id="getUserByUNo" resultMap="UserResultMap">
		select 
		<include refid="selectedUserColumns"></include>
		from tb_user u
		<include refid="joinCon"></include> 
		where u.u_no=#{uNo}
	</select>

	
	<delete id="deleteUserById" parameterType="Integer">
		delete from tb_user
		where id=#{id}
	</delete>
	
	<select id="getUserByUsername" resultMap="UserResultMap">
		select 
		<include refid="selectedUserColumns"></include> 
		from tb_user u
		<include refid="joinCon"></include> 
		where u.name=#{name}
	</select>
	
	
	<select id="getUsers" resultMap="UserResultMap">
		select 
		<include refid="selectedUserColumns"></include> 
		from tb_user u
		<include refid="joinCon"></include> 
		<include refid="userWhere"></include> 
		order by emp_type
	</select>
	
	
	<select id="getUsersCount" resultType="int">
		select 
		count(1)
		from tb_user u
		<include refid="userWhere"></include> 
	</select>
	
	<select id="getUserByEmail" resultMap="UserResultMap" >
		select 
		<include refid="selectedUserColumns"></include> 
		from tb_user u
		<include refid="joinCon"></include> 
		where u.corp_mail=#{corpMail}
	</select>
	
	<select id="getUserListOfDept" resultMap="UserResultMap" >
		select 
		<include refid="selectedUserColumns"></include> 
		from tb_user u
		<include refid="joinCon"></include>
		where (u.dept_l1_id=#{deptId} or u.dept_l2_id=#{deptId} or u.dept_l3_id=#{deptId})
	</select>
	
	
	<select id="getRolesByUserId" parameterType="Integer" resultType="com.netease.okr.model.entity.security.Role">
		select r.id,
		r.name,
		r.name_cn nameCn
		from tb_user_role ur, tb_role r
		where ur.role_id=r.id
		and ur.user_id=#{id,jdbcType=INTEGER}
	</select>
	
	
	<insert id="addUser" parameterType="com.netease.okr.model.entity.security.User" useGeneratedKeys="true" keyProperty="id">
		insert into tb_user(
			<if test="uNo!=null and uNo!=''">u_no,</if>
			<if test="corpMail!=null and corpMail!=''">corp_mail,</if>
			<if test="empType!=null and empType!=''">emp_type,</if>
			<if test="state!=null">state,</if>
			<if test="deptL1Id!=null and deptL1Id!='' ">dept_l1_id,</if>
			<if test="deptL2Id!=null and deptL2Id!='' ">dept_l2_id,</if>
			<if test="deptL3Id!=null and deptL3Id!='' ">dept_l3_id,</if>
			<if test="stationName!=null and stationName!='' ">station_name,</if>
			<if test="photoUrl!=null and photoUrl!='' ">photo_url,</if>
			<if test="nosKey!=null and nosKey!='' ">nos_key,</if>
			<if test="isValid!=null">is_valid,</if>
			create_time,
			modify_time,
			name
		)
		values(
			<if test="uNo!=null and uNo!=''">#{uNo},</if>
			<if test="corpMail!=null and corpMail!=''">#{corpMail},</if>
			<if test="empType!=null and empType!=''">#{empType},</if>
			<if test="state!=null">#{state},</if>
			<if test="deptL1Id!=null and deptL1Id!=''">#{deptL1Id},</if>
			<if test="deptL2Id!=null and deptL2Id!=''">#{deptL2Id},</if>
			<if test="deptL3Id!=null and deptL3Id!=''">#{deptL3Id},</if>
			<if test="stationName!=null and stationName!='' ">#{stationName},</if>
			<if test="photoUrl!=null and photoUrl!='' ">#{photoUrl},</if>
			<if test="nosKey!=null and nosKey!='' ">#{nosKey},</if>
			<if test="isValid!=null">#{isValid},</if>
			now(),
			now(),
			#{name}
		)
	</insert>
	
	
	<update id="updateUser" parameterType="com.netease.okr.model.entity.security.User">
		update tb_user
		<set> 
			<if test="name!=null and name!=''">
				name=#{name},
			</if>
			<if test="uNo != null and uNo!=''">
				u_no=#{uNo},
			</if>
			<if test="empType != null and empType!=''">
				emp_type=#{empType},
			</if>
			<if test="state != null">
				state=#{state},
			</if>
			<if test="corpMail != null and corpMail!=''">
				corp_mail=#{corpMail},
			</if>
			<if test="deptL1Id != null and deptL1Id!=''">
				dept_l1_id=#{deptL1Id},
			</if>
			<if test="deptL2Id != null  and deptL2Id!=''">
				dept_l2_id=#{deptL2Id},
			</if>
			<if test="deptL3Id!=null and deptL3Id!=''">
				dept_l3_id=#{deptL3Id},
			</if>
			
			<if test="stationName!=null and stationName!=''">
				station_name=#{stationName},
			</if>
			<if test="photoUrl!=null and photoUrl!=''">
				photo_url=#{photoUrl},
			</if>
			<if test="nosKey!=null and nosKey!=''">
				nos_key=#{nosKey},
			</if>
			<if test="isValid != null">
				is_valid=#{isValid},
			</if>
			modify_time = now()
		</set>
		where id=#{id}
	</update>
	
</mapper>