<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- redis连接池 -->  
  <!--   <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">   
        <property name="maxTotal" value="${redis_max_active}"></property>  
        <property name="maxIdle" value="${redis_max_idle}"></property>  
        <property name="maxWaitMillis" value="${redis_max_wait}"></property>  
        <property name="testOnBorrow" value="${redis_test_on_borrow}"></property>  
    </bean> --> 
	
	
	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="100"/><!-- 最大闲置 -->
        <property name="minIdle" value="10"/><!-- 最小闲置 -->
        <property name="maxTotal" value="${redis_max_active}"></property>
       <!--  <property name="testOnBorrow" value="true"/> --><!-- 可以获取 -->
    </bean>
    
    <!-- redis 配置-->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis_addr}" name="host" type="java.lang.String"/>
	    <constructor-arg index="2" value="${redis_port}"  name="port" type="int"/>
	    <constructor-arg index="3" value="${redis_max_wait}"  name="timeout" type="int"/>
	    <constructor-arg index="4" value="${redis_auth}"  name="password" type="java.lang.String"/>
	</bean>
	
	<!-- redis工具类 -->
	<bean id="redisClient" class="com.netease.okr.redis.RedisClient">
	    <property name="jedisPool" ref="jedisPool"/>
	</bean>
    
    <!-- redis连接工厂 -->  
   <!--  <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis_addr}"></property>  
        <property name="port" value="${redis_port}"></property>  
        <property name="password" value="${redis_auth}"></property>  
        <property name="poolConfig" ref="jedisConfig"></property>  
    </bean>   -->
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->  
    <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />  
        
    	    如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="valueSerializer">  
     		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
        </property>  
    </bean>   -->

</beans>
