<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task  http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    ">

	<!-- 操作记录 -->
	<bean id="optLog" class="com.netease.okr.aop.OptLogAop"></bean> 

	<aop:config>
		<aop:aspect id="b" ref="optLog"><!--调用操作记录类 -->
			<aop:pointcut id="log" expression="execution(* com.netease.okr.controller.*.*(..))" /><!--配置在controller包下所有的类在调用之前都会被拦截 -->
			<aop:after pointcut-ref="log" method="before" /><!--在controller包下面所有的类的所有方法被调用之前都调用optLog中的before方法 -->
			<aop:after pointcut-ref="log" method="after" /><!--在controller包下面所有的类的所有方法被调用之前都调用optLog中的after方法 -->
		</aop:aspect>
	</aop:config>


</beans>